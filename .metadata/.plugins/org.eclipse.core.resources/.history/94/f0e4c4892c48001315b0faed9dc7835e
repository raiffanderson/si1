package TDD;

import static org.junit.Assert.*;
import junit.framework.Assert;

import org.junit.Before;
import org.junit.Test;


public class TestConverteNumeros {
	
	
	String[]listaUmADez= {"zero","um", "dois", "tres","quatro","cinco","seis","sete","oito","nove","dez","onze","doze","treze","quatorze","quinze","dezesseis","dezessete","dezoito","dezenove"};
	String[]lista21A99Pulando9= {"vinte e um","trinta", "trinta e nove", "quarenta e oito","cinquenta e sete","sessenta e seis","setenta e cinco","oitenta e quatro","noventa e tres"};
	
	
	@Before
	public void setUp() {}
		String testeDeEntrada;
		
		
	@Test
	public void TestaDevolveNumeroPorExtenso(){
		/* 1º caso */
		for (int num = 0; num < 20; num++){
			 Assert.assertEquals(ConverteNumeros.devolveNumeroPorExtenso(Integer.toString(num)), listaUmADez[num]);
			 /* varre os números de 0 a 10 para conferir se todos estão cobertos*/
		} 
		
		/* 2º caso*/
		/* garante que não aceita string vazia na entrada */
		try {
			testeDeEntrada = "";
			Assert.assertFalse(ConverteNumeros.EntradaEhValida(testeDeEntrada));
			fail("não deveria permitir");
		} catch (Exception e) {
			Assert.assertEquals("Entrada Invalida!",e.getMessage());
		}
		
		/*garante que não aceita palavras na entrada*/
		try {
			testeDeEntrada = "casa";
			Assert.assertFalse(ConverteNumeros.EntradaEhValida(testeDeEntrada));
			fail("não deveria permitir");
		} catch (Exception e) {
			Assert.assertEquals("Entrada Invalida!",e.getMessage());
		}
		
		for (int num = 21; num < 99; num = num ){
			 Assert.assertEquals(ConverteNumeros.devolveNumeroPorExtenso(Integer.toString(num)), listaUmADez[num]);
			 /* varre os números de 0 a 10 para conferir se todos estão cobertos*/
		} 
		
	}
}
